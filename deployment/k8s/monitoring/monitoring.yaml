apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  labels:
    app.kubernetes.io/name: hellow
    app.kubernetes.io/component: configmap
    app.kubernetes.io/part-of: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_label_component]
            action: replace
            target_label: job
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app.kubernetes.io/name: hellow
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: monitoring
spec:
  clusterIP: None
  ports:
    - port: 9090
      targetPort: 9090
  selector:
    app.kubernetes.io/name: hellow
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/part-of: monitoring
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  labels:
    app.kubernetes.io/name: hellow
    app.kubernetes.io/component: statefulset
    app.kubernetes.io/part-of: monitoring
spec:
  serviceName: prometheus
  selector:
    matchLabels:
      app.kubernetes.io/name: hellow
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/part-of: monitoring
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hellow
        app.kubernetes.io/component: prometheus
        app.kubernetes.io/part-of: monitoring
    spec:
      containers:
        - name: prometheus
          image: "prom/prometheus:latest"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: data-volume
              mountPath: /prometheus
          ports:
            - containerPort: 9090
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: data-volume
          emptyDir: {}
      serviceAccountName: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: hellow
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: monitoring
spec:
  clusterIP: None
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app.kubernetes.io/name: hellow
    app.kubernetes.io/component: grafana
    app.kubernetes.io/part-of: monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: hellow
    app.kubernetes.io/component: deployment
    app.kubernetes.io/part-of: monitoring
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: hellow
      app.kubernetes.io/component: grafana
      app.kubernetes.io/part-of: monitoring
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hellow
        app.kubernetes.io/component: grafana
        app.kubernetes.io/part-of: monitoring
    spec:
      containers:
      - name: grafana
        image: guillaumebraibant/k8s-ws-sboot-cxf:custom-grafana-1.0.0
        imagePullPolicy: Always
        ports:
          - containerPort: 3000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  labels:
    app.kubernetes.io/name: hellow
    app.kubernetes.io/component: statefulset
    app.kubernetes.io/part-of: monitoring
spec:
  serviceName: loki
  selector:
    matchLabels:
      app.kubernetes.io/name: hellow
      app.kubernetes.io/component: loki
      app.kubernetes.io/part-of: monitoring
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hellow
        app.kubernetes.io/component: loki
        app.kubernetes.io/part-of: monitoring
    spec:
      containers:
        - name: loki
          image: "grafana/loki:latest"
          volumeMounts:
            - name: data-volume
              mountPath: /tmp/loki
          ports:
            - containerPort: 3100
      volumes:
        - name: data-volume
          emptyDir: {}
