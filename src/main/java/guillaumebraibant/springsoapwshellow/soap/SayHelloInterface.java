package guillaumebraibant.springsoapwshellow.soap;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.Response;

/**
 * This interface exposes several method that compute a greeting message based on the provided username
 *
 * This class was generated by Apache CXF 3.3.5
 * Generated source version: 3.3.5
 *
 */
@WebService(targetNamespace = "http://springsoapwshellow.guillaumebraibant/soap", name = "sayHelloInterface")
@XmlSeeAlso({ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface SayHelloInterface {

    @WebMethod(operationName = "sayHello")
    public Response<java.lang.String> sayHelloAsync(

        @WebParam(partName = "username", name = "username", targetNamespace = "")
        FullName username
    );

    @WebMethod(operationName = "sayHello")
    public Future<?> sayHelloAsync(

        @WebParam(partName = "username", name = "username", targetNamespace = "")
        FullName username,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<java.lang.String> asyncHandler
    );

    /**
     * This operation takes in a parameter a user name and return a greeting message
     */
    @WebMethod
    @WebResult(name = "response", targetNamespace = "", partName = "response")
    public java.lang.String sayHello(

        @WebParam(partName = "username", name = "username", targetNamespace = "")
        FullName username
    );
}
